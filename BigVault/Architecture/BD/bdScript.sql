-- USERS
CREATE TABLE Users (
    UserId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Username NVARCHAR(100) NOT NULL UNIQUE,
    Email NVARCHAR(255) NOT NULL UNIQUE,
    CreatedAt DATETIME2 DEFAULT SYSDATETIME()
);

-- GROUPS
CREATE TABLE Groups (
    GroupId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Name NVARCHAR(100) NOT NULL UNIQUE,
    Description NVARCHAR(MAX),
    CreatedAt DATETIME2 DEFAULT SYSDATETIME()
);

-- USER-GROUP MEMBERSHIP (Many-to-Many)
CREATE TABLE UserGroups (
    UserId UNIQUEIDENTIFIER NOT NULL,
    GroupId UNIQUEIDENTIFIER NOT NULL,
    JoinedAt DATETIME2 DEFAULT SYSDATETIME(),
    PRIMARY KEY (UserId, GroupId),
    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY (GroupId) REFERENCES Groups(GroupId) ON DELETE CASCADE
);

-- SECRETS
CREATE TABLE Secrets (
    SecretId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Name NVARCHAR(100) NOT NULL,
    Value NVARCHAR(MAX) NOT NULL, -- Should be encrypted in app layer
    Version INT DEFAULT 1,
    Enabled BIT DEFAULT 1,
    CreatedAt DATETIME2 DEFAULT SYSDATETIME()
);

-- GROUP-SECRET ACCESS (Many-to-Many)
CREATE TABLE GroupSecrets (
    GroupId UNIQUEIDENTIFIER NOT NULL,
    SecretId UNIQUEIDENTIFIER NOT NULL,
    GrantedAt DATETIME2 DEFAULT SYSDATETIME(),
    PRIMARY KEY (GroupId, SecretId),
    FOREIGN KEY (GroupId) REFERENCES Groups(GroupId) ON DELETE CASCADE,
    FOREIGN KEY (SecretId) REFERENCES Secrets(SecretId) ON DELETE CASCADE
);
